<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IncorrectUsernameOrPasswordMessage" xml:space="preserve">
    <value>The user name or password is incorrect.</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth Date</value>
    <comment>CRS</comment>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Ethiospark</value>
    <comment>CRS</comment>
  </data>
  <data name="CompanySite" xml:space="preserve">
    <value>Ethiospark.com</value>
    <comment>CRS</comment>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm {0}Password</value>
    <comment>CRS</comment>
  </data>
  <data name="ConfirmPasswordPlaceHolder" xml:space="preserve">
    <value>Confirm password...</value>
    <comment>CRS</comment>
  </data>
  <data name="CopyRight" xml:space="preserve">
    <value>2013 {0}</value>
    <comment>CRS</comment>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
    <comment>CRS</comment>
  </data>
  <data name="EmailPlaceHolder" xml:space="preserve">
    <value>Enter email address...</value>
    <comment>CRS</comment>
  </data>
  <data name="GenderMode" xml:space="preserve">
    <value>You are a</value>
    <comment>CRS</comment>
  </data>
  <data name="GenericErrorMessage" xml:space="preserve">
    <value>We are sorry but the requested operation could not be completed. Please try again later.</value>
    <comment>CRS</comment>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Invalid email address.</value>
    <comment>CRS</comment>
  </data>
  <data name="LoadingMessage" xml:space="preserve">
    <value>Loading...</value>
    <comment>CRS</comment>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
    <comment>CRS</comment>
  </data>
  <data name="ManSeekingMen" xml:space="preserve">
    <value>Man seeking Men</value>
    <comment>CRS</comment>
  </data>
  <data name="ManSeekingWomen" xml:space="preserve">
    <value>Man seeking Women</value>
    <comment>CRS</comment>
  </data>
  <data name="NoPassword" xml:space="preserve">
    <value>Password not provided.</value>
    <comment>CRS</comment>
  </data>
  <data name="NoPasswordConfirmation" xml:space="preserve">
    <value>Password confirmation not provided.</value>
    <comment>CRS</comment>
  </data>
  <data name="NoUsername" xml:space="preserve">
    <value>Username not provided.</value>
    <comment>CRS</comment>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
    <comment>CRS</comment>
  </data>
  <data name="PasswordConfirmationNotMatching" xml:space="preserve">
    <value>Password doesn't match confirmation.</value>
    <comment>CRS</comment>
  </data>
  <data name="PasswordPlaceHolder" xml:space="preserve">
    <value>Enter your password...</value>
    <comment>CRS</comment>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
    <comment>CRS</comment>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign Up for {0}</value>
    <comment>CRS</comment>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
    <comment>CRS</comment>
  </data>
  <data name="UserNamePlaceHolder" xml:space="preserve">
    <value>Enter your user name...</value>
    <comment>CRS</comment>
  </data>
  <data name="WomanSeekingMen" xml:space="preserve">
    <value>Woman seeking Men</value>
    <comment>CRS</comment>
  </data>
  <data name="WomanSeekingWomen" xml:space="preserve">
    <value>Woman seeking Women</value>
    <comment>CRS</comment>
  </data>
  <data name="NoEmail" xml:space="preserve">
    <value>Email address not provided.</value>
    <comment>CRS</comment>
  </data>
  <data name="EmailTooLong" xml:space="preserve">
    <value>Email too Long.</value>
  </data>
  <data name="PasswordTooLong" xml:space="preserve">
    <value>Password too Long</value>
  </data>
  <data name="UsernameTooLong" xml:space="preserve">
    <value>Username too Long</value>
  </data>
  <data name="InvalidDOB" xml:space="preserve">
    <value>Invalid date of birth.</value>
  </data>
  <data name="AgeTooYoung" xml:space="preserve">
    <value>You must be atleast {0} or older to register on {1}.</value>
  </data>
  <data name="UnexpectedInputValue" xml:space="preserve">
    <value>Unexpected input value.</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
    <comment>CRS</comment>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
    <comment>CRS</comment>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
    <comment>CRS</comment>
  </data>
</root>